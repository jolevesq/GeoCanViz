@import "compass/css3/images";

$img-root: "images/";
$img-spritebtn: "images/spriteButton.png";
$img-spritepopupbtn: "images/spritePopup.png";
$img-head: $img-root + "headGreybar.png";
$img-menur: $img-root + "headGreybarMenu.png";

$font: Verdana, Arial, Helvetica, sans-serif;
$white: #FFF;
$black: #000;
$orange: #EFA23E;
$orange-dark: #E54F06;
$orange-darkborder: #892f03;
$yellow: #FAFA0A;
$yellow-select: #F0F782;
$yellow-light: #FAFAF5;
$grey: #666;
$grey-pale: #E8E8E8;
$grey-panel: #DCE0DB;
$grey-green: #A4B2B2;
$text-color: #000!default;

$base-classname: "gcviz";

// the rem base factor if the root font-size element is set to something different then 62.5%
//font-size: 62.5%; // 1 rem = 10px
$rembase: 1; // 100% come from WET, they set body to 80% if we put html to 62.5% it will screw up their css

// responsive grid (http://viget.com/inspire/building-a-nested-responsive-grid-with-sass-compass)
$cols: 12;
$gutter: 2%;
$one_col: (100% - ($gutter * ($cols - 1))) / $cols;

@mixin cols($num) {
    width: ($one_col * $num) + ($gutter * ($num - 1));
}

@mixin sub_cols($num_child, $num_parent) {
    $parent_size: ($one_col * $num_parent) + ($gutter * ($num_parent - 1));
    $child_size: ($one_col * $num_child) + ($gutter * ($num_child - 1));
    margin-left: ($gutter / $parent_size) * 100%;
    width: ($child_size / $parent_size) * 100%;
}

// set text unselectable (solve problem that select graphic text when drawing)
@mixin unselectable {
    -moz-user-select: -moz-none;
    -khtml-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

// buttons sprite
@mixin marg-button {
    margin-top: (0.4 * $rembase) + rem;
}

@mixin sprite($url, $x, $y, $size: 3.2, $repeat: no-repeat) {
    background: url($url) $x + px $y + px $repeat;
    display: inline;
    cursor: pointer;
    border: none;
    height: ($size * 10) + px;
    width: ($size * 10) + px;
    position: relative;

    &:hover {
        background-position: $x + px $y - 36 + px;
    }

    &:focus {
        background-position: $x + px $y - 36 + px;
    }

    &:disabled {
        background-position: $x + px $y - 72 + px;
        cursor: default;
    }
}

@mixin spritenohover($url, $x, $y, $size: 3.2, $repeat: no-repeat) {
    background: url($url) $x + px $y + px $repeat;
    display: inline;
    cursor: default;
    border: none;
    height: ($size * 10) + px;
    width: ($size * 10) + px;
    position: relative;
    @include unselectable;
}

@mixin content-border-radius($radius: 0.5, $type: full) {
    @if $type == 'full' { border-radius: ($radius * $rembase) + rem; }
    @if $type == 'left' {
        border-top-left-radius: ($radius * $rembase) + rem;
        border-bottom-left-radius: ($radius * $rembase) + rem;
    }
    @if $type == 'right' {
        border-top-right-radius: ($radius * $rembase) + rem;
        border-bottom-right-radius: ($radius * $rembase) + rem;
    }
}

@mixin app-head-foot() {
    width: 100%;
    height: (4 * $rembase) + rem;
    text-align: left;
    background-size: 100% 100%;
}

@mixin app-text($size: 1.2, $weight: normal, $color: $text-color, $style: normal) {
    font: {
        family: $font!important;
        weight: $weight!important;
        size: ($size * 10) + px!important; // old browsers
        size: ($size * $rembase) + rem!important;
    }
    font-style: $style!important;
    color: $color;
}

@mixin app-border($width: 1, $style: solid, $color: #000) {
    border: {
        width: ($width * $rembase) + rem;
        style: $style;
        color: $color;
    }
}
